version: '3.7'


services:

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env.dev
    volumes:
      - static_volume:/usr/src/app/backend/static
      - media_volume:/usr/src/app/backend/media
    expose:
      - 8000
    restart: unless-stopped
    depends_on:
      - db

  db:
    image: postgres:alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - 3000
    restart: unless-stopped
    command: npm run start
    depends_on:
      - backend

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - static_volume:/usr/src/app/backend/static
      - media_volume:/usr/src/app/backend/media
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
  
  redis:
    image: "redis:alpine"
    ports:
    - '6379:6379'

  celery:
    build:
      context: ./backend
      dockerfile: DockerfileCelery
    restart: always
    command: celery -A send_mail worker -l info
    env_file:
      - ./backend/.env.dev   
  
    depends_on:
      - db
      - redis
      - backend
  
volumes:
  postgres_data:
  static_volume:
  media_volume:
  
